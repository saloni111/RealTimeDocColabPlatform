// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/collaboration.proto

package collaboration

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinDocumentRequest) Reset() {
	*x = JoinDocumentRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinDocumentRequest) ProtoMessage() {}

func (x *JoinDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinDocumentRequest.ProtoReflect.Descriptor instead.
func (*JoinDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{0}
}

func (x *JoinDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *JoinDocumentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinDocumentResponse) Reset() {
	*x = JoinDocumentResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinDocumentResponse) ProtoMessage() {}

func (x *JoinDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinDocumentResponse.ProtoReflect.Descriptor instead.
func (*JoinDocumentResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{1}
}

func (x *JoinDocumentResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SyncChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Changes       string                 `protobuf:"bytes,4,opt,name=changes,proto3" json:"changes,omitempty"` // JSON or other format representing changes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncChangesRequest) Reset() {
	*x = SyncChangesRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncChangesRequest) ProtoMessage() {}

func (x *SyncChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncChangesRequest.ProtoReflect.Descriptor instead.
func (*SyncChangesRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{2}
}

func (x *SyncChangesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SyncChangesRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *SyncChangesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SyncChangesRequest) GetChanges() string {
	if x != nil {
		return x.Changes
	}
	return ""
}

type SyncChangesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncChangesResponse) Reset() {
	*x = SyncChangesResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncChangesResponse) ProtoMessage() {}

func (x *SyncChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncChangesResponse.ProtoReflect.Descriptor instead.
func (*SyncChangesResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{3}
}

func (x *SyncChangesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LeaveDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveDocumentRequest) Reset() {
	*x = LeaveDocumentRequest{}
	mi := &file_proto_collaboration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveDocumentRequest) ProtoMessage() {}

func (x *LeaveDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveDocumentRequest.ProtoReflect.Descriptor instead.
func (*LeaveDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveDocumentRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LeaveDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *LeaveDocumentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LeaveDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveDocumentResponse) Reset() {
	*x = LeaveDocumentResponse{}
	mi := &file_proto_collaboration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveDocumentResponse) ProtoMessage() {}

func (x *LeaveDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_collaboration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveDocumentResponse.ProtoReflect.Descriptor instead.
func (*LeaveDocumentResponse) Descriptor() ([]byte, []int) {
	return file_proto_collaboration_proto_rawDescGZIP(), []int{5}
}

func (x *LeaveDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_collaboration_proto protoreflect.FileDescriptor

const file_proto_collaboration_proto_rawDesc = "" +
	"\n" +
	"\x19proto/collaboration.proto\x12\rcollaboration\"O\n" +
	"\x13JoinDocumentRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"5\n" +
	"\x14JoinDocumentResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x87\x01\n" +
	"\x12SyncChangesRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\achanges\x18\x04 \x01(\tR\achanges\"/\n" +
	"\x13SyncChangesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"o\n" +
	"\x14LeaveDocumentRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"1\n" +
	"\x15LeaveDocumentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xa1\x02\n" +
	"\x14CollaborationService\x12W\n" +
	"\fJoinDocument\x12\".collaboration.JoinDocumentRequest\x1a#.collaboration.JoinDocumentResponse\x12T\n" +
	"\vSyncChanges\x12!.collaboration.SyncChangesRequest\x1a\".collaboration.SyncChangesResponse\x12Z\n" +
	"\rLeaveDocument\x12#.collaboration.LeaveDocumentRequest\x1a$.collaboration.LeaveDocumentResponseBYZWgithub.com/saloni111/RealTimeDocColabPlatform/collaboration-service/proto;collaborationb\x06proto3"

var (
	file_proto_collaboration_proto_rawDescOnce sync.Once
	file_proto_collaboration_proto_rawDescData []byte
)

func file_proto_collaboration_proto_rawDescGZIP() []byte {
	file_proto_collaboration_proto_rawDescOnce.Do(func() {
		file_proto_collaboration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_collaboration_proto_rawDesc), len(file_proto_collaboration_proto_rawDesc)))
	})
	return file_proto_collaboration_proto_rawDescData
}

var file_proto_collaboration_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_collaboration_proto_goTypes = []any{
	(*JoinDocumentRequest)(nil),   // 0: collaboration.JoinDocumentRequest
	(*JoinDocumentResponse)(nil),  // 1: collaboration.JoinDocumentResponse
	(*SyncChangesRequest)(nil),    // 2: collaboration.SyncChangesRequest
	(*SyncChangesResponse)(nil),   // 3: collaboration.SyncChangesResponse
	(*LeaveDocumentRequest)(nil),  // 4: collaboration.LeaveDocumentRequest
	(*LeaveDocumentResponse)(nil), // 5: collaboration.LeaveDocumentResponse
}
var file_proto_collaboration_proto_depIdxs = []int32{
	0, // 0: collaboration.CollaborationService.JoinDocument:input_type -> collaboration.JoinDocumentRequest
	2, // 1: collaboration.CollaborationService.SyncChanges:input_type -> collaboration.SyncChangesRequest
	4, // 2: collaboration.CollaborationService.LeaveDocument:input_type -> collaboration.LeaveDocumentRequest
	1, // 3: collaboration.CollaborationService.JoinDocument:output_type -> collaboration.JoinDocumentResponse
	3, // 4: collaboration.CollaborationService.SyncChanges:output_type -> collaboration.SyncChangesResponse
	5, // 5: collaboration.CollaborationService.LeaveDocument:output_type -> collaboration.LeaveDocumentResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_collaboration_proto_init() }
func file_proto_collaboration_proto_init() {
	if File_proto_collaboration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_collaboration_proto_rawDesc), len(file_proto_collaboration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_collaboration_proto_goTypes,
		DependencyIndexes: file_proto_collaboration_proto_depIdxs,
		MessageInfos:      file_proto_collaboration_proto_msgTypes,
	}.Build()
	File_proto_collaboration_proto = out.File
	file_proto_collaboration_proto_goTypes = nil
	file_proto_collaboration_proto_depIdxs = nil
}
